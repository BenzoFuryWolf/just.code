# Generated by Django 4.2 on 2024-08-07 11:09

from django.db import migrations, models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserCustomModel',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('username', models.CharField(default='username', error_messages={'unique': 'A user with that username already exists.'}, max_length=100, unique=True, verbose_name='Username')),
                ('user_slug', models.SlugField(error_messages={'unique': 'A user with that user slug already exists.'}, max_length=100, unique=True, verbose_name='Slug')),
                ('account_photo', models.ImageField(blank=True, null=True, upload_to='account_photos/', verbose_name='User photo')),
                ('first_name', models.CharField(max_length=60, verbose_name='User name')),
                ('last_name', models.CharField(max_length=60, verbose_name='User name')),
                ('description_account', models.TextField(max_length=5000, verbose_name='Profile description')),
                ('email', models.EmailField(error_messages={'unique': 'A user with that username already exists.'}, max_length=254, unique=True, verbose_name='Email for account')),
                ('phone', models.PositiveIntegerField(blank=True, null=True, verbose_name='phone number')),
                ('date_birch', models.DateTimeField(verbose_name='User birch')),
                ('create_account', models.DateTimeField(auto_now_add=True, verbose_name='Time create account')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active?')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Is Staff?')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='Is Superuser?')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'ordering': ['create_account'],
            },
        ),
        migrations.AddIndex(
            model_name='usercustommodel',
            index=models.Index(fields=['create_account'], name='users_userc_create__dbac02_idx'),
        ),
    ]
